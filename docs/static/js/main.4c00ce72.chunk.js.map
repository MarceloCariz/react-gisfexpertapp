{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA8BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,mCACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAQgBO,UAAU,sBAAxC,SACI,uBAAOA,UAAU,+EAA+EC,KAAK,OAAOC,MAAOV,EAAYW,SAlBlH,SAACR,GACtBF,EAAcE,EAAES,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARnB,kBAWZM,GAXY,4CAAH,sDCaLO,EAVK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,sBAAKR,UAAU,gDAAf,UACI,qBAAKA,UAAU,8BAA8BsB,IAAKd,EAAKe,IAAKL,IAC5D,mBAAGlB,UAAU,uCAAb,SAAqDkB,QCsBlDM,EAzBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEf,ECJwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAnBAC,qBAAU,WAENvB,EAASC,GACJuB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLd,KAAMiB,EACNL,SAAS,MAEd,UAKV,CAACnB,IAICoB,EDvBuBM,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYY,EAAnB,EAAmBA,QAErB,OACE,qCACE,oBAAIzB,UAAU,kDAAd,SAAiEM,IAChEmB,GAAW,wCACZ,qBAAKzB,UAAU,IAAf,SACE,oBAAIA,UAAU,wFAAd,SACGmB,EAAOJ,KAAI,SAACC,GACX,OACE,cAAC,EAAD,eAGMA,GAFCA,EAAIC,eEUVgB,EAxBM,WAIjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACE,gCACE,oBAAIU,UAAU,uCAAd,0BACA,cAAC,EAAD,CAAaV,cAAeA,IAC5B,oBAAIU,UAAU,uBAAd,SACKkC,EAAWnB,KAAI,SAAAT,GACd,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCdnC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.4c00ce72.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handeInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats =>[inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n      \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit} className=\"flex justify-center\">\r\n                <input className=\"border-gray-500 bg-gray-200 text-black border-4 w-2/4 text-center rounded-lg\" type=\"text\" value={inputValue} onChange={handeInputChange}/>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddCategory;","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Vb6yI84dtEvTxR0OCMrvpvjgGjfQB3nw`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };","import React from 'react';\r\n\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\" card animate__animated animate__bounce mb-8 \">\r\n            <img className=\"object-fit w-auto max-h-64 \" src={url} alt={title}/>\r\n            <p className=\"text-white text-center font-semibold\">{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGif\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nconst GifGrid = ({ category }) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    < >\r\n      <h3 className=\"text-white text-2xl uppercase text-center mb-20\">{category}</h3>\r\n      {loading && <p>Loading</p> }\r\n      <div className=\" \">\r\n        <ol className=\"grid sm:gap-2 gap-1 sm:grid-cols-3 place-content-end grid-cols-2 justify-items-center\">\r\n          {images.map((img) => {\r\n            return (\r\n              <GifGridItem\r\n                key={img.id}\r\n                ///spread operator, envia todos los datos de la imagen\r\n                {...img}\r\n              />\r\n            );\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 3000);\r\n\r\n              \r\n            })\r\n\r\n      }, [category]);\r\n\r\n \r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories,nombre])\r\n    // }\r\n\r\n\r\n    return (\r\n      <div >\r\n        <h1 className=\"text-3xl text-white text-center mb-8\">GifExpertApp</h1>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <ol className=\"mt-10 content-center\">\r\n            {categories.map(category => {\r\n              return <GifGrid key={category} category={category}/>\r\n            })}\r\n        </ol>   \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('app')\n);\n\n\n"],"sourceRoot":""}